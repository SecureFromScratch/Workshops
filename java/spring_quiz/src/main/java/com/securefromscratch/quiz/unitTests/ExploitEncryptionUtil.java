package com.securefromscratch.quiz.unitTests;

import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.GCMParameterSpec;
import javax.crypto.spec.SecretKeySpec;

import com.securefromscratch.quiz.services.EncryptionUtil;

public class ExploitEncryptionUtil {
    public static void main(String[] args) throws Exception {
        // Encrypted output from encryptBoolean(true)
        String encrypted = EncryptionUtil.encryptBoolean(true);
        System.out.println("Encrypted: " + encrypted);

        // Decode the Base64-encoded ciphertext
        byte[] combined = Base64.getUrlDecoder().decode(encrypted);
        byte[] iv = new byte[12];
        byte[] ciphertext = new byte[combined.length - 12];
        System.arraycopy(combined, 0, iv, 0, 12);
        System.arraycopy(combined, 12, ciphertext, 0, ciphertext.length);

        // Use the same zeroed key as in dncryptBoolean
        byte[] key = new byte[16];

        // Initialize cipher for decryption
        Cipher cipher = Cipher.getInstance("AES/GCM/NoPadding");
        GCMParameterSpec spec = new GCMParameterSpec(128, iv);
        SecretKeySpec keySpec = new SecretKeySpec(key, "AES");
        cipher.init(Cipher.DECRYPT_MODE, keySpec, spec);

        // Attempt decryption
        byte[] plaintext = cipher.doFinal(ciphertext);
        System.out.println("Decrypted boolean: " + (plaintext[0] == 1));
    }
}
