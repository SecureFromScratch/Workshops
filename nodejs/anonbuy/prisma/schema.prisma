datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Wallet {
  id      Int     @id @default(autoincrement())
  code    String  @unique
  balance Decimal @default(0) @db.Decimal(8, 2)
}

model Item {
  id        Int      @id @default(autoincrement())
  name      String
  category  String
  price     Float
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  imageUrl  String?
  fileName  String?
  filePath  String?
  mimeType  String?
  fileSize  Int?

  // back-relation to lines (NOT "orders Order[]")
  orderLines OrderLine[]
}

enum OrderStatus {
  PENDING
  PAID
  FAILED
  CANCELLED
}

model Order {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  status     OrderStatus @default(PENDING)
  walletCode String      @unique
  buyerIp    String?

  lines   OrderLine[]
  coupons CouponRedemption[]
}

model OrderLine {
  id         Int   @id @default(autoincrement())
  orderId    Int
  itemId     Int
  quantity   Int   @default(1)
  unitPrice  Float
  totalPrice Float

  order Order @relation(fields: [orderId], references: [id])
  item  Item  @relation(fields: [itemId], references: [id])

  @@index([orderId])
  @@index([itemId])
}

model Coupon {
  id      Int     @id @default(autoincrement())
  code    String  @unique
  percent Int     @default(10)
  active  Boolean @default(true)

  redemptions CouponRedemption[]
}

model CouponRedemption {
  id         Int      @id @default(autoincrement())
  orderId    Int
  couponId   Int
  couponCode String?
  redeemedAt DateTime @default(now())
  percent    Int

  order  Order  @relation(fields: [orderId], references: [id])
  coupon Coupon @relation(fields: [couponId], references: [id])

  @@index([orderId])
  @@index([orderId, couponId])
}
