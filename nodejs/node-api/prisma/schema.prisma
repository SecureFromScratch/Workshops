datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Item {
  id        Int      @id @default(autoincrement())
  name      String
  category  String
  price     Float
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  imageUrl  String?
  fileName  String?
  filePath  String?
  mimeType  String?
  fileSize  Int?

  // back-relation to lines (NOT "orders Order[]")
  orderLines OrderLine[]
}

enum OrderStatus {
  PENDING
  PAID
  FAILED
  CANCELLED
}

model Order {
  id             Int         @id @default(autoincrement())
  createdAt      DateTime    @default(now())
  status         OrderStatus @default(PENDING)
  idempotencyKey String?     @unique
  buyerIp        String?

  lines OrderLine[]
}

model OrderLine {
  id         Int   @id @default(autoincrement())
  orderId    Int
  itemId     Int
  quantity   Int   @default(1)
  unitPrice  Float
  totalPrice Float

  order Order @relation(fields: [orderId], references: [id])
  item  Item  @relation(fields: [itemId], references: [id])

  @@index([orderId])
  @@index([itemId])
}

model Coupon {
  id     Int     @id @default(autoincrement())
  code   String  @unique
  active Boolean @default(true)

  redemptions     CouponRedemption[]
  redemptionsVuln CouponRedemptionVuln[]
}

model CouponRedemption {
  id        Int      @id @default(autoincrement())
  userId    Int
  couponId  Int
  createdAt DateTime @default(now())

  coupon Coupon @relation(fields: [couponId], references: [id])

  @@unique([userId, couponId]) // SAFE: 1 per user
  @@index([couponId])
}

model CouponRedemptionVuln {
  id        Int      @id @default(autoincrement())
  userId    Int
  couponId  Int
  createdAt DateTime @default(now())

  coupon Coupon @relation(fields: [couponId], references: [id])

  // VULN: no uniqueness!
  @@index([userId, couponId])
  @@index([couponId])
}
