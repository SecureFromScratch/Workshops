{"prompt": "Write a secure file upload API in C#.", "completion": "[HttpPost(\"UploadFiles\")]\npublic async Task<IActionResult> Post(List<IFormFile> files)\n{\n    long size = files.Sum(f => f.Length);\n\n    // full path to file in temp location\n    var filePath = Path.GetTempFileName();\n\n    foreach (var formFile in files)\n    {\n        if (formFile.Length > 0)\n        {\n            using (var stream = new FileStream(filePath, FileMode.Create))\n            {\n                await formFile.CopyToAsync(stream);\n            }\n        }\n    }\n\n    // process uploaded files\n    // Don't rely on or trust the FileName property without validation.\n\n    return Ok(new { count = files.Count, size, filePath});\n}\n"}
{"prompt": "Write a secure file upload API in C#.", "completion": "public ActionResult OnPostUpload(List<IFormFile> files)\n    {\n        try\n        {\n            var file = files.FirstOrDefault();\n            var inputstream = file.OpenReadStream();\n\n            XSSFWorkbook workbook = new XSSFWorkbook(stream);\n\n            var FIRST_ROW_NUMBER = {{firstRowWithValue}};\n\n            ISheet sheet = workbook.GetSheetAt(0);\n            // Example: var firstCellRow = (int)sheet.GetRow(0).GetCell(0).NumericCellValue;\n\n            for (int rowIdx = 2; rowIdx <= sheet.LastRowNum; rowIdx++)\n               {\n                  IRow currentRow = sheet.GetRow(rowIdx);\n\n                  if (currentRow == null || currentRow.Cells == null || currentRow.Cells.Count() < FIRST_ROW_NUMBER) break;\n\n                  var df = new DataFormatter();                \n\n                  for (int cellNumber = {{firstCellWithValue}}; cellNumber < {{lastCellWithValue}}; cellNumber++)\n                      {\n                         //business logic & saving data to DB                        \n                      }               \n                }\n        }\n        catch(Exception ex)\n        {\n            throw new FileFormatException($\"Error on file processing - {ex.Message}\");\n        }\n    }\n"}
{"prompt": "Write a secure file upload API in C#.", "completion": "[HttpPost(\"Save\")]\npublic ActionResult Save([FromForm] FileContent fileContent)\n{\n    // ...\n}\n\npublic class FileContent\n{\n    public string FileName { get; set; }\n    public IFormFile formFile { get; set; }\n}\n \n"}
{"prompt": "Write a secure file upload API in C#.", "completion": "public async Task<object> PassImageWithText(IFormFile files)\n{\n    byte[] data;\n    string result = \"\";\n    ByteArrayContent bytes;\n\n    MultipartFormDataContent multiForm = new MultipartFormDataContent();\n\n    try\n    {\n        using (var client = new HttpClient())\n        {\n            using (var br = new BinaryReader(files.OpenReadStream()))\n            {\n                data = br.ReadBytes((int)files.OpenReadStream().Length);\n            }\n\n            bytes = new ByteArrayContent(data);\n            multiForm.Add(bytes, \"files\", files.FileName);\n            multiForm.Add(new StringContent(\"value1\"), \"key1\");\n            multiForm.Add(new StringContent(\"value2\"), \"key2\");\n\n            var res = await client.PostAsync(_MEDIA_ADD_IMG_URL, multiForm);\n        }\n    }\n    catch (Exception e)\n    {\n        throw new Exception(e.ToString());\n    }\n\n    return result;\n}\n"}
{"prompt": "Write a secure file upload API in C#.", "completion": "[HttpPost]\npublic ActionResult Post()\n{\n  try\n  {\n    var files = Request.Form.Files;\n\n    foreach (IFormFile file in files)\n    {\n        if (file.Length == 0)\n            continue;\n        \n        string tempFilename = Path.Combine(Path.GetTempPath(), file.FileName);\n        System.Diagnostics.Trace.WriteLine($\"Saved file to: {tempFilename}\");\n\n        using (var fileStream = new FileStream(tempFilename, FileMode.Create))\n        {\n            file.CopyTo(fileStream);\n        }\n    }\n    return new OkObjectResult(\"Yes\");\n  }\n  catch (Exception ex)\n  {\n    return new BadRequestObjectResult(ex.Message);\n  }\n}\n"}
{"prompt": "Write a secure file upload API in C#.", "completion": "        [HttpPost(\"AddProduct\")]\n\n        public async Task<IActionResult> AddProduct( IFormFile files)\n        {\n            string fileGuid = Guid.NewGuid().ToString();\n            var pathImage = Path.Combine(_hostEnvironment.ContentRootPath, \"Images\", fileGuid);\n            var streamImage = new FileStream(pathImage, FileMode.Append);\n            await files.CopyToAsync(streamImage);\n\n            return Ok();\n\n           \n        }\n"}
